---
name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [master]

permissions:
  contents: write
  pull-requests: write
  pages: write

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create and deploy preview to GitHub Pages
        run: |
          # Set up git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create preview branch
          PREVIEW_BRANCH="pr-preview-${{ github.event.pull_request.number }}"

          # Check if branch exists and delete it
          if git ls-remote --heads origin $PREVIEW_BRANCH | grep -q $PREVIEW_BRANCH; then
            git push origin --delete $PREVIEW_BRANCH
          fi

          # Create new orphan branch for preview
          git checkout --orphan $PREVIEW_BRANCH
          git rm -rf .

          # Copy files for preview
          git checkout ${{ github.event.pull_request.head.sha }} -- index.html styles.css

          # Add preview indicator
          sed -i '/<title>/a\<!-- PR Preview Build #${{ github.event.pull_request.number }} -->' index.html

          # Commit and push
          git add .
          git commit -m "Deploy PR #${{ github.event.pull_request.number }} preview"
          git push origin $PREVIEW_BRANCH

          echo "Preview deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/tree/$PREVIEW_BRANCH"

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const previewUrl = `https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/tree/pr-preview-${prNumber}`;

            const comment = `🚀 **PR Preview Deployed!**

            🌐 **Live Preview:** [${previewUrl}](${previewUrl})

            > **Hvordan teste denne PR-en:**
            > 1. Klikk på preview-lenken ovenfor
            > 2. Sammenlign med live side: https://${{ github.repository_owner }}.github.io
            > 3. Test funksjonaliteten i nettleseren din

            🔄 Preview oppdateres automatisk med nye commits.
            🧹 Preview-branch slettes automatisk når PR lukkes.

            _Deployed: ${new Date().toISOString()}_`;

            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('PR Preview Deployed!')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete preview branch
        run: |
          PREVIEW_BRANCH="pr-preview-${{ github.event.pull_request.number }}"

          # Check if branch exists and delete it
          if git ls-remote --heads origin $PREVIEW_BRANCH | grep -q $PREVIEW_BRANCH; then
            git push origin --delete $PREVIEW_BRANCH
            echo "Deleted preview branch: $PREVIEW_BRANCH"
          else
            echo "Preview branch $PREVIEW_BRANCH does not exist"
          fi